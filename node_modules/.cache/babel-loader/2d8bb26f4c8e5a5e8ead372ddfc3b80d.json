{"ast":null,"code":"import SWAPI from '../apis/SWAPI';\nexport const selectCategory = (category = '', searchTerm = '') => {\n  console.log('selectCategory Action Hit!', category);\n  return async dispatch => {\n    var response = [];\n\n    if (category) {\n      var urlPath = \"/\".concat(category);\n      if (searchTerm) urlPath = \"\".concat(urlPath, \"/?search=\").concat(searchTerm);\n      console.log(\"Url Path\", urlPath);\n      response = await SWAPI.get(urlPath);\n      var results = [];\n      if (response) results = response.data.results;\n    }\n\n    console.log(response);\n    dispatch({\n      type: 'CATEGORY_SELECTED',\n      payload: {\n        category: category,\n        filteredSubCategories: results\n      }\n    });\n  };\n};\nexport const selectSubcategory = (url = '') => {\n  console.log('selectSubcategory Action Hit!', url);\n  return async dispatch => {\n    var response = [];\n\n    if (url) {\n      const urlPath = url.slice(21, -1);\n      response = await SWAPI.get(\"/\".concat(urlPath));\n      if (!response) response = [];\n    }\n\n    dispatch({\n      type: 'SUBCATEGORY_SELECTED',\n      payload: {\n        subCategory: url,\n        filteredResults: response.data\n      }\n    });\n  };\n};\nexport const FilterResultsDetails = (searchTerm = '') => {\n  console.log('FilterResultsDetails', searchTerm);\n  return {\n    type: 'RESULT_DETAIL_FILTERED',\n    payload: {\n      \"climate\": \"Arid\",\n      \"diameter\": \"10465\",\n      \"gravity\": \"1 standard\",\n      \"name\": \"Tatooine\",\n      \"orbital_period\": \"304\",\n      \"population\": \"200000\",\n      \"residents\": [\"https://swapi.co/api/people/1/\", \"https://swapi.co/api/people/2/\"]\n    }\n  };\n};","map":{"version":3,"sources":["D:\\Projects\\Personal\\React\\ReactReduxSWAPIExample\\reactreduxswapiexample\\src\\actions\\index.js"],"names":["SWAPI","selectCategory","category","searchTerm","console","log","dispatch","response","urlPath","get","results","data","type","payload","filteredSubCategories","selectSubcategory","url","slice","subCategory","filteredResults","FilterResultsDetails"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,UAAU,GAAE,EAA5B,KAAmC;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,QAA1C;AAEA,SAAO,MAAOI,QAAP,IAAoB;AAE3B,QAAIC,QAAQ,GAAG,EAAf;;AAEI,QAAIL,QAAJ,EAAc;AAEV,UAAIM,OAAO,cAAON,QAAP,CAAX;AAEA,UAAIC,UAAJ,EACIK,OAAO,aAAMA,OAAN,sBAAyBL,UAAzB,CAAP;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AAEAD,MAAAA,QAAQ,GAAG,MAAMP,KAAK,CAACS,GAAN,CAAUD,OAAV,CAAjB;AAEA,UAAIE,OAAO,GAAG,EAAd;AAEA,UAAIH,QAAJ,EACIG,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAcD,OAAxB;AACP;;AAEDN,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEID,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAE,mBADD;AAELC,MAAAA,OAAO,EAAE;AACLX,QAAAA,QAAQ,EAAEA,QADL;AAELY,QAAAA,qBAAqB,EAAEJ;AAFlB;AAFJ,KAAD,CAAR;AAOP,GA9BD;AA+BH,CAlCM;AAoCP,OAAO,MAAMK,iBAAiB,GAAG,CAACC,GAAG,GAAG,EAAP,KAAc;AAC3CZ,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CW,GAA7C;AAEA,SAAO,MAAOV,QAAP,IAAoB;AAEvB,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIS,GAAJ,EAAS;AACL,YAAMR,OAAO,GAAGQ,GAAG,CAACC,KAAJ,CAAU,EAAV,EAAc,CAAC,CAAf,CAAhB;AAEAV,MAAAA,QAAQ,GAAG,MAAMP,KAAK,CAACS,GAAN,YAAcD,OAAd,EAAjB;AAEA,UAAI,CAACD,QAAL,EACIA,QAAQ,GAAG,EAAX;AACP;;AAEDD,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAE,sBADD;AAELC,MAAAA,OAAO,EAAE;AACLK,QAAAA,WAAW,EAAEF,GADR;AAELG,QAAAA,eAAe,EAAEZ,QAAQ,CAACI;AAFrB;AAFJ,KAAD,CAAR;AAOH,GApBD;AAqBH,CAxBM;AA2BP,OAAO,MAAMS,oBAAoB,GAAG,CAACjB,UAAU,GAAG,EAAd,KAAqB;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,UAApC;AAEA,SACI;AACIS,IAAAA,IAAI,EAAE,wBADV;AAEIC,IAAAA,OAAO,EAAE;AACG,iBAAW,MADd;AAEG,kBAAY,OAFf;AAGG,iBAAW,YAHd;AAIG,cAAQ,UAJX;AAKG,wBAAkB,KALrB;AAMG,oBAAc,QANjB;AAOG,mBAAa,CACb,gCADa,EAEb,gCAFa;AAPhB;AAFb,GADJ;AAgBH,CAnBM","sourcesContent":["import SWAPI from '../apis/SWAPI';\r\n\r\nexport const selectCategory = (category = '', searchTerm ='') => {\r\n    console.log('selectCategory Action Hit!', category);\r\n\r\n    return async (dispatch) => { \r\n\r\n    var response = [];\r\n\r\n        if (category) {\r\n\r\n            var urlPath = `/${category}`;\r\n\r\n            if (searchTerm)\r\n                urlPath = `${urlPath}/?search=${searchTerm}`;\r\n\r\n            console.log(\"Url Path\", urlPath);\r\n\r\n            response = await SWAPI.get(urlPath);\r\n\r\n            var results = [];\r\n\r\n            if (response)\r\n                results = response.data.results;\r\n        }\r\n\r\n        console.log(response);\r\n\r\n            dispatch({\r\n                type: 'CATEGORY_SELECTED',\r\n                payload: {\r\n                    category: category,\r\n                    filteredSubCategories: results\r\n                }\r\n        });\r\n    };\r\n}\r\n\r\nexport const selectSubcategory = (url = '') => {\r\n    console.log('selectSubcategory Action Hit!', url);\r\n\r\n    return async (dispatch) => {\r\n\r\n        var response = [];\r\n\r\n        if (url) {\r\n            const urlPath = url.slice(21, -1);\r\n\r\n            response = await SWAPI.get(`/${urlPath}`);\r\n\r\n            if (!response)\r\n                response = [];\r\n        }\r\n\r\n        dispatch({\r\n            type: 'SUBCATEGORY_SELECTED',\r\n            payload: {\r\n                subCategory: url,\r\n                filteredResults: response.data\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport const FilterResultsDetails = (searchTerm = '') => {\r\n    console.log('FilterResultsDetails', searchTerm);\r\n\r\n    return (\r\n        {\r\n            type: 'RESULT_DETAIL_FILTERED',\r\n            payload: {\r\n                        \"climate\": \"Arid\",\r\n                        \"diameter\": \"10465\",\r\n                        \"gravity\": \"1 standard\",\r\n                        \"name\": \"Tatooine\",\r\n                        \"orbital_period\": \"304\",\r\n                        \"population\": \"200000\",\r\n                        \"residents\": [\r\n                        \"https://swapi.co/api/people/1/\",\r\n                        \"https://swapi.co/api/people/2/\"\r\n                        ]\r\n                }\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}